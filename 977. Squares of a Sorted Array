Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in non-decreasing order.

 

Example 1:

Input: nums = [-4,-1,0,3,10]
Output: [0,1,9,16,100]
Explanation: After squaring, the array becomes [16,1,0,9,100].
After sorting, it becomes [0,1,9,16,100].
Example 2:

Input: nums = [-7,-3,2,3,11]
Output: [4,9,9,49,121]



Code
class Solution {
    public int[] sortedSquares(int[] nums) {
     int ans[]= new int[nums.length];
     int s=0;
     int e=nums.length-1;
     int i=e;
     while(s<=e){
        int sds= nums[s]*nums[s];
        int eds= nums[e]*nums[e];
        if(sds<eds){
            ans[i]=eds;
            e=e-1;
        }else{
            ans[i]=sds;
            s=s+1;
        }
        i=i-1;
     } 
     return ans;
    }
}
