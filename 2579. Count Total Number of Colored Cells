There exists an infinitely large two-dimensional grid of uncolored unit cells. You are given a positive integer n, indicating that you must do the following routine for n minutes:

At the first minute, color any arbitrary unit cell blue.
Every minute thereafter, color blue every uncolored cell that touches a blue cell.
Below is a pictorial representation of the state of the grid after minutes 1, 2, and 3.


Return the number of colored cells at the end of n minutes.

 

Example 1:

Input: n = 1
Output: 1
Explanation: After 1 minute, there is only 1 blue cell, so we return 1.
Example 2:

Input: n = 2
Output: 5
Explanation: After 2 minutes, there are 4 colored cells on the boundary and 1 in the center, so we return 5. 



Code
class Solution {
    public long coloredCells(int n) {

// for n=1 -> 1
// for n=2 -> 1 + 4
// for n=3 -> 1 + 4 + 8
// for n=4 -> 1 + 4 + 8 + 12
// for n=N -> 1 + 4 + 8 + 12 + 16 + ..... Nth term
// we can see a pattern and for n = 5
// 1 + 4 + 8 + 12 + 16 can be rearranged into
// 1 + 4( 1 + 2 + 3 + 4) => here 5 is -> n and (1+2+3+4) is n-1 terms
//sum of x natural no. is [x*(x+1)]/2

        long x=n-1;
        long sum= (x*(x+1))/2;
        long colored= (sum*4)+1;
        return colored;
    }
}
