Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.

The overall run time complexity should be O(log (m+n)).

 

Example 1:

Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.
Example 2:

Input: nums1 = [1,2], nums2 = [3,4]
Output: 2.50000
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.
 




Code
class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int lenofnums1= nums1.length;
        int lenofnums2= nums2.length;
        double median=0;
        int nums3[]= new int[lenofnums1+lenofnums2];
        int j=0;
        for (int i=0; i<lenofnums1; i++){
            nums3[j]=nums1[i];
            j=j+1;
        }
        for (int k=0; k<lenofnums2; k++){
            nums3[j++]=nums2[k];
        }
        Arrays.sort(nums3);
        int a= nums3.length;
        if(a%2==0){
            float b=nums3[a/2];
            float c=nums3[a/2-1];
            median= (b+c)/2;
        }
         else{
            
            median= nums3[a/2];
        }
        return median;
    }
}
