Given a positive integer n, generate an n x n matrix filled with elements from 1 to n2 in spiral order.

 

Example 1:
Input: n = 3
Output: [[1,2,3],[8,9,4],[7,6,5]]

Example 2:
Input: n = 1
Output: [[1]]






Code
class Solution {
    public int[][] generateMatrix(int n) {
        int matrix[][]= new int[n][n];
        int startRow=0;
        int endRow=n-1;
        int startCol=0;
        int endCol=n-1;
        int val=1;

        while(startRow<=endRow && startCol<=endCol){
            //fill first row
            for(int j=startCol; j<=endCol; j++){
                matrix[startRow][j]= val;
                val+=1;
            }
            startRow+=1;
            //fill end Col
            for(int i=startRow; i<=endRow; i++){
                matrix[i][endCol]=val;
                val+=1;
            }
            endCol-=1;
            if(startRow<=endRow){
                //fill last row
                for(int j=endCol; j>=startCol; j--){
                    matrix[endRow][j]=val;
                    val+=1;
                }
                endRow-=1;
            }
            if(startCol<=endCol){
                //fill first Col
                for(int i=endRow; i>=startRow; i--){
                    matrix[i][startCol]=val;
                    val+=1;
                }
                startCol+=1;
            } 
        }
        return matrix;
    }
}
