Given an input string s, reverse the order of the words.

A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.

Return a string of the words in reverse order concatenated by a single space.

Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.

 

Example 1:
Input: s = "the sky is blue"
Output: "blue is sky the"

Example 2:
Input: s = "  hello world  "
Output: "world hello"
Explanation: Your reversed string should not contain leading or trailing spaces.

Example 3:
Input: s = "a good   example"
Output: "example good a"
Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.





Code
class Solution {
    public String reverseWords(String s) {
        StringBuilder ans= new StringBuilder();
        int startIndex = s.length()-1;
        while(startIndex >= 0){
            while(startIndex >=0 && s.charAt(startIndex)==' '){
                startIndex--;
            }
            if(startIndex < 0){
                break;
            }
            int endIndex = startIndex;
            while(startIndex >=0 && s.charAt(startIndex)!=' '){
                startIndex--;
            }
            if(ans.length()==0){
                ans.append(s.substring(startIndex+1, endIndex+1));
            }else{
                ans.append(" ");
                ans.append(s.substring(startIndex+1, endIndex+1));
            }
        }
        return ans.toString();
    }
}
