Given the head of a sorted linked list, delete all duplicates such that each element appears only once. Return the linked list sorted as well.

 

Example 1:
Input: head = [1,1,2]
Output: [1,2]

Example 2:
Input: head = [1,1,2,3,3]
Output: [1,2,3]




Code
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head == null || head.next == null){
            return head ;
        }

        ListNode temp = new ListNode(head.val);
        ListNode  ans = temp ;

        ListNode ptr = head.next ;

        while(ptr!=null){
            if(ptr.val!=temp.val){
                temp.next = ptr ;
                temp = temp.next;
            }
            ptr = ptr.next;
        }
        temp.next = null; 
        return ans ;
    }
}
