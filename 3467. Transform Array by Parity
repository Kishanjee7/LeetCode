You are given an integer array nums. Transform nums by performing the following operations in the exact order specified:

Replace each even number with 0.
Replace each odd numbers with 1.
Sort the modified array in non-decreasing order.
Return the resulting array after performing these operations.

 

Example 1:

Input: nums = [4,3,2,1]

Output: [0,0,1,1]

Explanation:

Replace the even numbers (4 and 2) with 0 and the odd numbers (3 and 1) with 1. Now, nums = [0, 1, 0, 1].
After sorting nums in non-descending order, nums = [0, 0, 1, 1].
Example 2:

Input: nums = [1,5,1,4,2]

Output: [0,0,1,1,1]

Explanation:

Replace the even numbers (4 and 2) with 0 and the odd numbers (1, 5 and 1) with 1. Now, nums = [1, 1, 1, 0, 0].
After sorting nums in non-descending order, nums = [0, 0, 1, 1, 1].






 Code
 class Solution {
    public int[] searchRange(int[] nums, int target) {
       int res[]= new int[2]; 
       res[0]=search(nums,target,true);
       res[1]=search(nums,target,false);
       return res;
    }
       static int search(int nums[], int target, boolean isFirst){
       int ans=-1;
       int start= 0;
       int end=nums.length-1;
       while(start<=end){
        int mid=start+(end-start)/2;
        if(nums[mid]==target){
            ans=mid;
            if(isFirst){
                end=mid-1;
            }else{
                start=mid+1;
            }
        }else if(nums[mid]<target){
            start=mid+1;
        }else{
            end=mid-1;
        }
       }
       return ans;
    }
    
}
